---
import type { GetStaticPaths } from "astro";
import "@/styles/globals.css";
import { Button } from "@components/ui/button";
import Layout from "../layouts/Layout.astro";

export const getStaticPaths: GetStaticPaths = (async () => {
  const posts = await Astro.glob("../posts/**/*.md");

  return posts.map((post) => {
    const rel_path = post.file.split("src/posts/")[1];
    const sanitized = rel_path.split(".md")[0];

    return {
      params: {
        slug: sanitized,
      },
      props: {
        post,
      },
    };
  });
}) satisfies GetStaticPaths;

const { Content } = Astro.props.post as { Content: any };
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<Layout title="Hello">
  <article class="p-5 prose prose-base dark:prose-invert max-w-none">
    <Content />
  </article>
</Layout>
