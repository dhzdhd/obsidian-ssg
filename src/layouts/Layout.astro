---
import "@/styles/globals.css";
import { ModeToggle } from "@/components/ModeToggle";
import { type TreeItem } from "@components/ui/tree.svelte";
import Tree from "@components/Tree.svelte";
import { Search, CommandMenu } from "@components/Search";

interface Props {
  title: string;
}

const { title } = Astro.props;

const posts = await Astro.glob("../posts/**/*.md");

let result: TreeItem[] = [];
let level = { result };

posts.forEach((post, index) => {
  const rel_path = post.file.split("src/posts/")[1];
  const sanitized = rel_path.split(".md")[0];

  rel_path.split("/").reduce((r, name) => {
    if (!r[name]) {
      r[name] = { result: [] };
      if (name.endsWith(".md")) {
        r.result.push({
          title: name.replace(".md", ""),
          url: `/${sanitized}`,
          children: undefined,
          icon: "file",
        });
      } else {
        r.result.push({
          title: name,
          children: r[name].result,
          icon: "folder",
        });
      }
    }

    return r[name];
  }, level);
});
const data = result;
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link
      href="https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/katex.min.css"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <header
      class="flex justify-between items-center bg-background px-5 h-14 w-svw top-0 fixed border-[1px]"
    >
      <h1 class="text-2xl">Obsidian</h1>
      <ModeToggle client:visible />
      <!-- <CommandMenu client:load /> -->
    </header>
    <Tree client:load treeItems={data} />
    <main class="mx-80 mt-14 min-h-svh">
      <slot />
    </main>
    <footer class="flex items-center px-5 h-14 w-svw bg-black border-[1px]">
    </footer>
  </body>
</html>
